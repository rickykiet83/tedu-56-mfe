services:
  #database section

  #orderdb: sql server
  orderdb:
    container_name: tedu_order_db
    environment:
      SA_PASSWORD: "Passw0rd!"
      ACCEPT_EULA: "Y"
    volumes:
      - tedu_sqlserver_data:/var/opt/mssql
    restart: always
    ports:
      - "1435:1433"

  # productdb: mysql
  productdb:
    container_name: tedu_product_db
    ## do not use this command in Windows
    # command: [ "--default-authentication-plugin=mysql_native_password" ]
    environment:
      MYSQL_ROOT_PASSWORD: "PassWOrd"
      MYSQL_DATABASE: "ProductDB"
    restart: always
    volumes:
      - tedu_mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"

  #customerdb: postgres
  customerdb:
    container_name: tedu_customer_db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=CustomerDb
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - tedu_postgres_data:/var/lib/postgresql/data

  #basketdb: redis
  basketdb:
    container_name: tedu_basket_db
    restart: always
    ports:
      - "6379:6379"

  #inventorydb: mongo
  inventorydb:
    container_name: tedu_inventory_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - tedu_mongo_data:/data/db

  hangfiredb:
    container_name: tedu_hangfire_db
    ports:
      - '27018:27017'
    volumes:
      - tedu_hangfire_mongo_data:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'admin'
      MONGO_INITDB_ROOT_PASSWORD: 'admin'

  teduidentitydb:
    container_name: tedu_identity_db
    environment:
      SA_PASSWORD: 'Passw0rd!'
      ACCEPT_EULA: 'Y'
    volumes:
      - tedu_identity_sqlserver_data:/var/opt/mssql
    restart: always
    ports:
      - '1436:1433'

#infrastructure section
  rabbitmq:
    container_name: tedu_tedurabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - tedu_rabbitmq_data:/var/lib/rabbitmq
    hostname: tedurabbitmq

  elasticsearch:
    container_name: tedu_elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      #      - ELASTIC_USERNAME=elastic #default username
      - ELASTIC_PASSWORD=admin
    ports:
      - "9200:9200"
    volumes:
      - tedu_elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    container_name: tedu_kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=admin
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  #microservices api sections
  product.api:
    container_name: tedu_product.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "DatabaseSettings:ConnectionString=Server=tedu_product_db;Database=ProductDB;Uid=root;Pwd=PassWOrd"
      - "ApiConfiguration:ApiBaseUrl=http://product.api"
      - "ApiConfiguration:IdentityServerBaseUrl=http://localhost:6001"
      - "ApiConfiguration:IssuerUri=http://identity.api"
    depends_on:
      - productdb
    ports:
      - "6002:80"
    restart: always

  customer.api:
    container_name: tedu_customer.api

    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "DatabaseSettings:ConnectionString=Server=tedu_customer_db;Database=CustomerDb;User Id=admin;Password=admin1234"
      - "HangFireSettings:Storage:ConnectionString=Server=tedu_customer_db;Port=5432;Database=CustomerDb;User Id=admin;Password=admin1234"
      - "StripeConfig:ApiKey=YOUR_API_KEY"

    depends_on:
      - customerdb
    ports:
      - "6003:80"
    restart: always

  basket.api:
    container_name: tedu_basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "EventBusSettings:HostAddress=amqp://guest:guest@tedurabbitmq:5672"
      - "GrpcSettings:StockUrl=http://inventory.grpc"
      - BackgroundJobSettings:HangfireUrl=http://hangfire.api
      - BackgroundJobSettings:CheckoutUrl=http://localhost:6001
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "6004:80"
    restart: always

  basket.worker:
    container_name: tedu_basket.worker
    environment:
      - DOTNET_ENVIRONMENT=Development
      - ASPNETCORE_ENVIRONMENT=Development
      - "EventBusSettings:HostAddress=amqp://guest:guest@tedurabbitmq:5672"
      - "EventBusSettings:ServiceName=Basket.Worker"
      - "ServiceUrls:Basket=http://basket.api"
    depends_on:
      - basketdb
      - rabbitmq
    restart: always

  ordering.api:
    container_name: tedu_ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "DatabaseSettings:ConnectionString=Server=tedu_order_db;Database=OrderDb;User Id=sa;Password=Passw0rd!;Multipleactiveresultsets=true;TrustServerCertificate=true;Connection Timeout=30;"
      - "EventBusSettings:HostAddress=amqp://guest:guest@tedurabbitmq:5672"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "6005:80"
    restart: always

  inventory.product.api:
    container_name: tedu_inventory.product.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "MongoDbSettings:ConnectionString=mongodb://inventorydb"
      - "MongoDbSettings:DatabaseName=InventoryDb"
    depends_on:
      - inventorydb
    ports:
      - "6006:80"
    restart: always

  inventory.grpc:
    container_name: tedu_inventory.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_URLS=http://+:80
      - "MongoDbSettings:ConnectionString=mongodb://inventorydb"
      - "MongoDbSettings:DatabaseName=InventoryDb"
    depends_on:
      - inventorydb
    ports:
      - "6007:80"
    restart: always

  apigw.ocelot:
    container_name: tedu_apigw.ocelot
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_URLS=http://+:80
      - GlobalConfiguration:BaseUrl=http://apigw.ocelot
      - ApiConfiguration:ApiBaseUrl=http://apigw.ocelot
      - ApiConfiguration:IdentityServerBaseUrl=http://localhost:6001
      - ApiConfiguration:IssuerUri=http://identity.api
    depends_on:
      - customer.api
      - basket.api
      - product.api
      - ordering.api
      - inventory.product.api
    ports:
      - "6020:80"
    restart: always

  hangfire.api:
    container_name: tedu_hangfire.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "HangFireSettings:Storage:ConnectionString=mongodb://admin:admin@hangfiredb/hangfire-webapi?authSource=admin"
    depends_on:
      - hangfiredb
    ports:
      - "6008:80"
    restart: always

  saga.api:
    container_name: tedu_saga.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "EventBusSettings:HostAddress=amqp://guest:guest@tedurabbitmq:5672"
      - "ServiceUrls:Basket=http://basket.api"
      - "ServiceUrls:Orders=http://ordering.api"
      - "ServiceUrls:Inventory=http://inventory.product.api"
    ports:
      - "6009:80"
    restart: always

  identity.api:
    container_name: tedu_identity.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/tedu-idp.pfx
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ASPNETCORE_HTTPS_PORT=7001
      - 'ConnectionStrings:IdentitySqlConnection=Server=tedu_identity_db;Database=TeduIdentity;User Id=sa;Password=Passw0rd!;Multipleactiveresultsets=true;TrustServerCertificate=true;Connection Timeout=30;'
      - 'IdentityServer:BaseUrl=http://localhost:6001'
      - 'IdentityServer:IssuerUri=http://identity.api'
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - teduidentitydb
    ports:
      - '6001:80'
      - '7001:443'
    restart: always

  payment.api:
    container_name: tedu_payment.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "StripeConfig:ApiKey=YOUR_API_KEY"
      - "AllowOrigins=http://localhost:4200, http://localhost:4201, http://localhost:4202, http://localhost:4203"
      - "EventBusSettings:HostAddress=amqp://guest:guest@tedurabbitmq:5672"
      - "ApiKey=35b11635-2ad2-4e43-9839-3d6dfef8f27d" # DO NOT CHANGE THIS
      - "ServiceUrls:Customer=http://customer.api"
    ports:
      - "6011:80"
    restart: always

  webstatus:
    container_name: tedu_web_status
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_URLS=http://+:80
      # - HealthChecksUI__HealthChecks__0__Name=Product Health Check
      # - HealthChecksUI__HealthChecks__0__Uri=http://product.api/hc
      # - HealthChecksUI__HealthChecks__1__Name=Customer Health Check
      # - HealthChecksUI__HealthChecks__1__Uri=http://customer.api/hc
      # - HealthChecksUI__HealthChecks__2__Name=Basket Health Check
      # - HealthChecksUI__HealthChecks__2__Uri=http://basket.api/hc
      # - HealthChecksUI__HealthChecks__3__Name=Ordering Health Check
      # - HealthChecksUI__HealthChecks__3__Uri=http://ordering.api/hc
      # - HealthChecksUI__HealthChecks__4__Name=Inventory Health Check
      # - HealthChecksUI__HealthChecks__4__Uri=http://inventory.product.api/hc
      # - HealthChecksUI__HealthChecks__5__Name=Scheduled Job Health Check
      # - HealthChecksUI__HealthChecks__5__Uri=http://hangfire.api/hc
      # - HealthChecksUI__HealthChecks__6__Name=Identity Health Check
      # - HealthChecksUI__HealthChecks__6__Uri=http://identity.api/hc
      # - HealthChecksUI__HealthChecks__7__Name=Payment Health Check
      # - HealthChecksUI__HealthChecks__7__Uri=http://payment.api/hc
    ports:
      - "6010:80"
